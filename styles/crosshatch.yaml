# Author @patriciogv - 2015

import:
    - default.yaml
    - https://tangrams.github.io/blocks/color/tools.yaml
    - https://tangrams.github.io/blocks/generative/noise.yaml
    - https://tangrams.github.io/blocks/space/tile.yaml
    - https://tangrams.github.io/blocks/texture/zoom-fade.yaml
    - https://tangrams.github.io/blocks/filter/hatch.yaml

textures:
    hatch_0: 
        url: imgs/hatch_0.png
    hatch_2: 
        url: imgs/hatch_2.png
    paper:
        url: imgs/normal-0031.jpg

scene:
    background:
        color: [0.302,0.302,0.306]

lights:
    dir:
        ambient: .3
    pnt:
        type: point
        position: [0, -500px, 500px]
        origin: ground
        diffuse: .5
        ambient: .3

layers:
    earth:
        draw:
            earth:
                color: [[14,[1.,1.,1.]],[18,[1.,1.,1.]]]
    landuse:
        draw:
            landuse:
                color: [0.302,0.302,0.306]
    water:
        draw:
            water:
                color: '#343434'
    roads:
        draw:
            roads:
                color: '#343434'
    buildings:
        draw:
            buildings:
                color: global.pseudoRandomColor
                extrude: true
            buildingsLines:
                order: global.order-top
                width: [[12, .1px], [14, 0.1px], [15, 0.5px], [17, 1.0px], [18, 1px]]
                extrude: true
                color: [0.217,0.217,0.217]
    places:
        data: { source: mapzen }
        filter: { name: true }
        draw:
            text:
                font:
                    family: Baskerville
                    size: 20px
                    style: italic
                    fill: black
                    stroke: { color: [0.976,0.953,0.890] , width: 7 }
            
styles:
    earth:
        base: polygons
        lighting: false
        mix: texture-zoom-fade 
        shaders:
            uniforms:
                u_hatch: hatch_0
            blocks:
                filter: |
                    float pattern = 1.0-TileTexture(u_hatch,3.).a;
                    color.rgb = mix(vec3(0.302,0.302,0.306), vec3(0.976,0.953,0.890), pattern);
    landuse:
        base: polygons
        mix: earth
        shaders:
            uniforms:
                u_hatch: hatch_2
    water:
        base: polygons
        texcoords: true
        material:
            normal:
                texture: paper
                mapping: planar
                scale: 0.001
            ambient: 1.
            diffuse: 1.
    roads:
        base: lines
        mix: generative-noise
        texcoords: true
        shaders:
            blocks:
                filter: |
                    vec2 uv = fract(v_texcoord*vec2(1.,.1));
                    color.rgb = mix(vec3(0.302,0.302,0.306),vec3(0.976,0.953,0.890),1.0-(smoothstep(0.0,0.1,uv.x) * smoothstep(0.0,0.1,1.0-uv.x)+noise(uv*vec2(2.,70.)) ));
    buildings:
        base: polygons
        mix: [color-tools, generative-noise, filter-hatch]
        texcoords: true
        material:
            ambient: 1.
            diffuse: 1.
        shaders:
            blocks:
                position: |
                    position.z *= max(1.0,0.5+(1.0-(u_map_position.z/20.0))*5.0);
                filter: |
                    vec2 uv = v_texcoord;
                    float b = getBrightness(light_accumulator_diffuse.rgb);
                    b *=  clamp(uv.y*1.5,0.0,1.0)+0.2;

                    float pattern = 1.-getHatch(uv,b);
                    vec2 edge = vec2(0.1,0.05)*noise(uv*20.);
                    vec2 blend = smoothstep(vec2(0.0),edge,uv)*smoothstep(vec2(0.0),edge,vec2(1.)-uv);

                    color.rgb = mix(vec3(0.302,0.302,0.306), vec3(0.976,0.953,0.890), mix(1.0,pattern,blend.x*blend.y));
    buildingsLines:
        base: lines
        lighting: false
        shaders:
            blocks:
                width: |
                    width *= 0.2+min(pow(position.z*0.006,2.),.6);
                position: |
                    position.z *= max(1.0,0.5+(1.0-(u_map_position.z/20.0))*5.0);
