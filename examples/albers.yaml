# Author @patriciogv - 2015
import:
    - https://tangrams.github.io/blocks/global.yaml
    - https://tangrams.github.io/blocks/geometry/projections.yaml
    - https://tangrams.github.io/blocks/functions/zoom.yaml
    
sources:
    osm:
        type: TopoJSON
        url:  https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        url_params:
            api_key: vector-tiles-P6dkVl4

cameras:
    cam:
        type: perspective
        vanishing_point: [0, -500]
        
layers:
    earth:
        data: { source: osm }
        draw:
            poly:
                order: global.order
                color: '#555'
    water:
        data: { source: osm }
        draw:
            poly:
                order: global.order
                color: '#ddd'
    boundaries:
        data: { source: osm }
        draw:
            line:
                order: global.order
                color: white
                width: 1px
    roads:
        data: { source: osm }
        properties: { width: 3 }
        draw:
            line:
                order: global.order
                color: gray
                width: [[5, .25px],[15, .5px],[85, 10]]
    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }
        draw:
            poly:
                order: global.order
                color: '#999'
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                poly:
                    extrude: function () { return feature.height > 0 || $zoom >= 16; }
                    
styles:
    toAlbers:
        mix: [geometry-projections, functions-zoom]
        animated: true
        shaders:
            defines:
                ZOOM_START: 7.
                ZOOM_END: 12.
            blocks:
                position: |
                    // mercator position of the current vertex, u_map_position = center of screen, position.xy = vertex screen position in meters from the center of the screen
                    vec2 mercator = u_map_position.xy + position.xy;
                    float lat = y2lat_m(mercator.y);
                    float lon = x2lon_m(mercator.x);
                    position.xy = mix(latlon2albers(lat,lon),position.xy,zoom());
            
    poly:
        base: polygons
        mix: toAlbers
    line:
        base: lines 
        mix: toAlbers
